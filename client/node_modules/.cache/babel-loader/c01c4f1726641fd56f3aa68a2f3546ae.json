{"ast":null,"code":"var _jsxFileName = \"/home/win/Desktop/learnReact/apolloGraphQL_Art_API/client/src/component/DisplayTable.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery, gql } from '@apollo/client';\nimport { useEffect } from 'react';\nimport { DescriptionContainer, ImageContainer, SingleBox, TittleContainer } from './styled.ts'; //import ReactHtmlParser from 'react-html-parser'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_ITEMS = gql`\n    query{\n        getItems{\n            data{\n                description\n                image\n                title\n                id\n            }\n        }\n    }\n`;\n\nconst DisplayTable = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ITEMS);\n  if (error) return `Error : ${error}`;\n  let divArray;\n\n  if (!loading) {\n    console.log(data.getItems.data);\n    divArray = data.getItems.data.map(element => {\n      return /*#__PURE__*/_jsxDEV(SingleBox, {\n        children: [/*#__PURE__*/_jsxDEV(ImageContainer, {\n          imgURL: element.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TittleContainer, {\n          children: [\" \", element.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DescriptionContainer, {\n          children: [\" \", element.description, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    children: divArray\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DisplayTable, \"t0z2SrXJDzhl3h6STsA86t9Oe1U=\", false, function () {\n  return [useQuery];\n});\n\n_c = DisplayTable;\nexport default DisplayTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayTable\");","map":{"version":3,"names":["useQuery","gql","useEffect","DescriptionContainer","ImageContainer","SingleBox","TittleContainer","GET_ITEMS","DisplayTable","loading","error","data","divArray","console","log","getItems","map","element","image","title","description","display","flexWrap"],"sources":["/home/win/Desktop/learnReact/apolloGraphQL_Art_API/client/src/component/DisplayTable.js"],"sourcesContent":["import  {useQuery, gql} from '@apollo/client'\nimport { useEffect } from 'react'\nimport { DescriptionContainer, ImageContainer, SingleBox, TittleContainer } from './styled.ts'\n//import ReactHtmlParser from 'react-html-parser'\nconst GET_ITEMS = gql`\n    query{\n        getItems{\n            data{\n                description\n                image\n                title\n                id\n            }\n        }\n    }\n`\n\n\nconst DisplayTable = ()=>{\n    const  {loading,error,data} = useQuery(GET_ITEMS)   \n    if (error) return `Error : ${error}`\n    let divArray;\n    if (!loading){\n        console.log(data.getItems.data);\n        divArray = data.getItems.data.map((element)=>{\n            return(\n            <SingleBox>\n                <ImageContainer imgURL={element.image}></ImageContainer>\n                <TittleContainer> {element.title} </TittleContainer>\n                {/* <DescriptionContainer> {ReactHtmlParser(element.description)} </DescriptionContainer> */}\n                <DescriptionContainer > {element.description} </DescriptionContainer>\n            </SingleBox>\n            )\n        })\n    }\n    \n\n    return(\n        <div style={{display : \"flex\", flexWrap:\"wrap\"}}>\n            {divArray}\n        </div>\n    )\n}\n\nexport default DisplayTable;"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,GAAnB,QAA6B,gBAA7B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,oBAAT,EAA+BC,cAA/B,EAA+CC,SAA/C,EAA0DC,eAA1D,QAAiF,aAAjF,C,CACA;;;AACA,MAAMC,SAAS,GAAGN,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAcA,MAAMO,YAAY,GAAG,MAAI;EAAA;;EACrB,MAAO;IAACC,OAAD;IAASC,KAAT;IAAeC;EAAf,IAAuBX,QAAQ,CAACO,SAAD,CAAtC;EACA,IAAIG,KAAJ,EAAW,OAAQ,WAAUA,KAAM,EAAxB;EACX,IAAIE,QAAJ;;EACA,IAAI,CAACH,OAAL,EAAa;IACTI,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,QAAL,CAAcJ,IAA1B;IACAC,QAAQ,GAAGD,IAAI,CAACI,QAAL,CAAcJ,IAAd,CAAmBK,GAAnB,CAAwBC,OAAD,IAAW;MACzC,oBACA,QAAC,SAAD;QAAA,wBACI,QAAC,cAAD;UAAgB,MAAM,EAAEA,OAAO,CAACC;QAAhC;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,eAAD;UAAA,gBAAmBD,OAAO,CAACE,KAA3B;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ,eAII,QAAC,oBAAD;UAAA,gBAAyBF,OAAO,CAACG,WAAjC;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADA;IAQH,CATU,CAAX;EAUH;;EAGD,oBACI;IAAK,KAAK,EAAE;MAACC,OAAO,EAAG,MAAX;MAAmBC,QAAQ,EAAC;IAA5B,CAAZ;IAAA,UACKV;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAxBD;;GAAMJ,Y;UAC4BR,Q;;;KAD5BQ,Y;AA0BN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}